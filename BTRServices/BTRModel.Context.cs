//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BTRServices
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BTRDbContext : DbContext
    {
        public BTRDbContext()
            : base("name=BTRDbContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BudgetTransfer> BudgetTransfers { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Transaction> Transactions { get; set; }
        public virtual DbSet<vw_BudgetTransers> vw_BudgetTransers { get; set; }
        public virtual DbSet<Indices> Indices { get; set; }
        public virtual DbSet<Accounts> Accounts { get; set; }
    
        public virtual ObjectResult<Indices> indices_byowner(string uni)
        {
            var uniParameter = uni != null ?
                new ObjectParameter("uni", uni) :
                new ObjectParameter("uni", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Indices>("indices_byowner", uniParameter);
        }
    
        public virtual ObjectResult<Indices> indices_byowner(string uni, MergeOption mergeOption)
        {
            var uniParameter = uni != null ?
                new ObjectParameter("uni", uni) :
                new ObjectParameter("uni", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Indices>("indices_byowner", mergeOption, uniParameter);
        }
    
        public virtual ObjectResult<Indices> indices_bydept(Nullable<int> dept)
        {
            var deptParameter = dept.HasValue ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Indices>("indices_bydept", deptParameter);
        }
    
        public virtual ObjectResult<Indices> indices_bydept(Nullable<int> dept, MergeOption mergeOption)
        {
            var deptParameter = dept.HasValue ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Indices>("indices_bydept", mergeOption, deptParameter);
        }
    
        public virtual ObjectResult<Indices> indices_owned_bydept(Nullable<int> dept, string uni)
        {
            var deptParameter = dept.HasValue ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(int));
    
            var uniParameter = uni != null ?
                new ObjectParameter("uni", uni) :
                new ObjectParameter("uni", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Indices>("indices_owned_bydept", deptParameter, uniParameter);
        }
    
        public virtual ObjectResult<Indices> indices_owned_bydept(Nullable<int> dept, string uni, MergeOption mergeOption)
        {
            var deptParameter = dept.HasValue ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(int));
    
            var uniParameter = uni != null ?
                new ObjectParameter("uni", uni) :
                new ObjectParameter("uni", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Indices>("indices_owned_bydept", mergeOption, deptParameter, uniParameter);
        }
    }
}
